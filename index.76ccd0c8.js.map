{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_class_extract_field_descriptor.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_get.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@swc/helpers/lib/_class_apply_descriptor_set.js","node_modules/@swc/helpers/lib/_class_private_field_get.js","node_modules/@swc/helpers/lib/_class_private_field_init.js","node_modules/@swc/helpers/lib/_class_private_field_set.js","src/js/entities/subscription.js","src/js/entities/user.js","node_modules/@swc/helpers/lib/_class_private_method_get.js","node_modules/@swc/helpers/lib/_class_private_method_init.js","node_modules/@swc/helpers/lib/_define_property.js","src/js/entities/streaming-service.js","src/js/entities/show.js","src/js/entities/movie.js","src/js/entities/series.js","src/js/entities/episode.js","src/js/main.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classExtractFieldDescriptor;\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) {\n    if (!privateMap.has(receiver)) {\n        throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n    }\n    return privateMap.get(receiver);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorGet;\nfunction _classApplyDescriptorGet(receiver, descriptor) {\n    if (descriptor.get) {\n        return descriptor.get.call(receiver);\n    }\n    return descriptor.value;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classApplyDescriptorSet;\nfunction _classApplyDescriptorSet(receiver, descriptor, value) {\n    if (descriptor.set) {\n        descriptor.set.call(receiver, value);\n    } else {\n        if (!descriptor.writable) {\n            // This should only throw in strict mode, but class bodies are\n            // always strict and private fields can only be used inside\n            // class bodies.\n            throw new TypeError(\"attempted to set read only private field\");\n        }\n        descriptor.value = value;\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldGet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorGet = _interopRequireDefault(require(\"./_class_apply_descriptor_get\"));\nfunction _classPrivateFieldGet(receiver, privateMap) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"get\");\n    return (0, _classApplyDescriptorGet).default(receiver, descriptor);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateFieldInit(obj, privateMap, value) {\n    (0, _checkPrivateRedeclaration).default(obj, privateMap);\n    privateMap.set(obj, value);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateFieldSet;\nvar _classExtractFieldDescriptor = _interopRequireDefault(require(\"./_class_extract_field_descriptor\"));\nvar _classApplyDescriptorSet = _interopRequireDefault(require(\"./_class_apply_descriptor_set\"));\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n    var descriptor = (0, _classExtractFieldDescriptor).default(receiver, privateMap, \"set\");\n    (0, _classApplyDescriptorSet).default(receiver, descriptor, value);\n    return value;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","export default class Subscription {\n  // private attribute\n  #streamingService;\n\n  constructor(streamingService) {\n    this.#streamingService = streamingService;\n  }\n\n  // getter for private attribute #streamingService\n  get streamingService() {\n    return this.#streamingService;\n  }\n\n  watch(showName) {\n    if (this.#streamingService.shows.find(show => show.name === showName)) {\n      let views = 0;\n      if (this.#streamingService.viewsByShowNames.get(showName) !== undefined) {\n        views = this.#streamingService.viewsByShowNames.get(showName) + 1;\n        this.#streamingService.viewsByShowNames.set(showName, views);\n        return;\n      }\n      this.#streamingService.viewsByShowNames.set(showName, 1);\n    } else {\n      console.log(\n        `Can't find '${showName}' in streaming service ${\n          this.#streamingService.name\n        }`\n      );\n    }\n  }\n\n  getRecommendationTrending() {\n    const randomNumber = Math.floor(Math.random() * 10);\n    const shows = this.#streamingService.getMostViewedShowsOfYear(2022);\n\n    if (shows[randomNumber] !== undefined) {\n      return shows[randomNumber];\n    }\n    return 'There are no shows right now!';\n  }\n\n  getRecommendationByGenre(genre) {\n    const randomNumber = Math.floor(Math.random() * 10);\n    const shows = this.#streamingService.getMostViewedShowsOfGenre(genre);\n\n    if (shows[randomNumber] !== undefined) {\n      return shows[randomNumber];\n    }\n    return 'There are no shows right now!';\n  }\n}\n","import Subscription from './subscription';\n\nexport default class User {\n  // private attribute\n  #subscriptions = [];\n\n  subscribe(streamingService) {\n    if (\n      this.#subscriptions.find(\n        subscription =>\n          subscription.streamingService.name === streamingService.name\n      )\n    ) {\n      return `You have already subscribed to ${streamingService.name}`;\n    }\n    const subscription = new Subscription(streamingService);\n    this.#subscriptions.push(subscription);\n    return subscription;\n  }\n\n  // getter for private attribute #subscriptions\n  get subscriptions() {\n    return this.#subscriptions;\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodGet;\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateMethodInit(obj, privateSet) {\n    (0, _checkPrivateRedeclaration).default(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","export default class StreamingService {\n  #name;\n  #shows = [];\n  // showName: views\n  viewsByShowNames = new Map();\n\n  constructor(name) {\n    this.#name = name;\n  }\n\n  addShow(show) {\n    this.#shows.push(show);\n  }\n\n  // getter for private attribute #name\n  get name() {\n    return this.#name;\n  }\n\n  // getter for private attribute #shows\n  get shows() {\n    return this.#shows;\n  }\n\n  getMostViewedShowsOfYear(year) {\n    // filtering shows by year\n    const showsFilteredByYear = this.#shows.filter(\n      show => show.releaseDate.getFullYear() === year\n    );\n\n    // filtering Map by year\n    const showsName = showsFilteredByYear.map(show => show.name);\n    const viewsByShowNamesFiltered = new Map();\n    this.viewsByShowNames.forEach((value, key) => {\n      if (showsName.includes(key)) {\n        viewsByShowNamesFiltered.set(key, value);\n      }\n    });\n\n    // sorting Map in descending order by value (views)\n    if (viewsByShowNamesFiltered.size !== 0) {\n      const sortMap = new Map(\n        [...viewsByShowNamesFiltered.entries()].sort((a, b) => b[1] - a[1])\n      );\n\n      const resultShows = [];\n      const sortedShowNames = this.#getMapKeys(sortMap);\n\n      for (let i = 0; i < showsFilteredByYear.length; i++) {\n        if (sortedShowNames.includes(showsFilteredByYear[i].name)) {\n          resultShows.push(showsFilteredByYear[i]);\n        }\n      }\n\n      if (resultShows.length > 10) {\n        resultShows = resultShows.slice(0, 10);\n        return resultShows;\n      }\n      return resultShows;\n    } else {\n      return 'There is no shows released in this year';\n    }\n  }\n\n  getMostViewedShowsOfGenre(genre) {\n    // filtering shows by genre\n    const showsFilteredByGenre = this.#shows.filter(\n      show => Object.values(show.genre)[0] === genre\n    );\n\n    // filtering Map by genre\n    const showsName = showsFilteredByGenre.map(show => show.name);\n    const viewsByShowNamesFiltered = new Map();\n    this.viewsByShowNames.forEach((value, key) => {\n      if (showsName.includes(key)) {\n        viewsByShowNamesFiltered.set(key, value);\n      }\n    });\n\n    // sorting Map in descending order by value (views)\n    if (viewsByShowNamesFiltered.size !== 0) {\n      const sortMap = new Map(\n        [...viewsByShowNamesFiltered.entries()].sort((a, b) => b[1] - a[1])\n      );\n\n      const resultShows = [];\n      const sortedShowNames = this.#getMapKeys(sortMap);\n\n      for (let i = 0; i < showsFilteredByGenre.length; i++) {\n        if (sortedShowNames.includes(showsFilteredByGenre[i].name)) {\n          resultShows.push(showsFilteredByGenre[i]);\n        }\n      }\n\n      if (resultShows.length > 10) {\n        resultShows = resultShows.slice(0, 10);\n        return resultShows;\n      }\n      return resultShows;\n    } else {\n      return 'There is no shows by this genre';\n    }\n  }\n\n  #getMapKeys(map) {\n    const keys = [];\n    for (let showName of map.keys()) {\n      keys.push(showName);\n    }\n\n    if (keys.length > 10) {\n      keys = keys.slice(0, 10);\n    }\n\n    return keys;\n  }\n}\n","export default class Show {\n  name;\n  genre = {};\n  releaseDate;\n  getDuration() {}\n}\n","import Show from './show';\n\nexport default class Movie extends Show {\n  constructor({ name, genre, releaseDate, duration }) {\n    super();\n    this.name = name;\n    this.genre[name] = genre;\n    this.releaseDate = releaseDate;\n    this.duration = duration;\n  }\n\n  getDuration() {\n    return this.duration;\n  }\n}\n","import Show from './show';\n\nexport default class Series extends Show {\n  // private attribute\n  #episodes = [];\n\n  constructor({ name, genre, releaseDate }) {\n    super();\n    this.name = name;\n    this.genre[name] = genre;\n    this.releaseDate = releaseDate;\n  }\n\n  setEpisodes(episodes) {\n    this.#episodes = [...episodes];\n  }\n\n  // getter for private attribute #episodes\n  get episodes() {\n    return this.#episodes;\n  }\n\n  getDuration() {\n    this.duration = this.#calculateDuration();\n    return this.duration;\n  }\n\n  #calculateDuration() {\n    const duration = this.#episodes.reduce((prev, episode) => {\n      return prev + episode.duration;\n    }, 0);\n    return duration;\n  }\n}\n","import Show from './show';\n\nexport default class Episode extends Show {\n  constructor({ name, releaseDate, duration }) {\n    super();\n    this.name = name;\n    this.releaseDate = releaseDate;\n    this.duration = duration;\n  }\n\n  getDuration() {\n    return this.duration;\n  }\n}\n","import User from './entities/user';\nimport StreamingService from './entities/streaming-service';\nimport Movie from './entities/movie';\nimport Series from './entities/series';\nimport Episode from './entities/episode';\n\nconst testMovie1 = new Movie({\n  name: 'Pirates of the Caribbean: The Curse of the Black Pearl',\n  genre: 'fantasy',\n  releaseDate: new Date('July 9, 2003'),\n  duration: 143,\n});\n\nconst testMovie2 = new Movie({\n  name: 'Minions: The Rise of Gru',\n  genre: 'fantasy',\n  releaseDate: new Date('July 1, 2022'),\n  duration: 155,\n});\n\nconst testMovie3 = new Movie({\n  name: 'Thor: Love and Thunder',\n  genre: 'fantasy',\n  releaseDate: new Date('July 8, 2022'),\n  duration: 126,\n});\n\nconst testSeries = new Series({\n  name: 'Rick and Morty',\n  genre: 'science fiction sitcom',\n  releaseDate: new Date('December 2, 2013'),\n});\n\nconst episodeFirst = new Episode({\n  name: 'Pilot',\n  releaseDate: new Date('December 2, 2013'),\n  duration: 15,\n});\n\nconst episodeSecond = new Episode({\n  name: 'Lawnmower Dog',\n  releaseDate: new Date('December 9, 2013'),\n  duration: 17,\n});\n\nconst episodeThird = new Episode({\n  name: 'Anatomy Park',\n  releaseDate: new Date('December 16, 2013'),\n  duration: 13,\n});\n\nconst episodes = [episodeFirst, episodeSecond, episodeThird];\n\ntestSeries.setEpisodes(episodes);\n\n// console.log(testSeries.getDuration()); // 45\n\nconst testStreamingService = new StreamingService('Netflix');\n\ntestStreamingService.addShow(testMovie1);\ntestStreamingService.addShow(testMovie2);\ntestStreamingService.addShow(testMovie3);\ntestStreamingService.addShow(testSeries);\n\nconst testUser = new User();\n\ntestUser.subscribe(testStreamingService);\nconsole.log(testUser.subscribe(testStreamingService)); // You have already subscribed to Netflix\nconsole.log(testUser.subscriptions); // [Subscription]\n\ntestUser.subscriptions[0].watch(testMovie1.name);\ntestUser.subscriptions[0].watch(testMovie1.name);\ntestUser.subscriptions[0].watch(testMovie2.name);\ntestUser.subscriptions[0].watch(testMovie2.name);\ntestUser.subscriptions[0].watch(testMovie2.name);\ntestUser.subscriptions[0].watch(testMovie3.name);\ntestUser.subscriptions[0].watch(testMovie3.name);\ntestUser.subscriptions[0].watch('Very interesting show');\ntestUser.subscriptions[0].watch(testSeries.name);\n\nconsole.log(testStreamingService.viewsByShowNames);\nconsole.log(testStreamingService.shows);\n\nconsole.log(testStreamingService.getMostViewedShowsOfYear(2003)); // [Movie]\nconsole.log(\n  testStreamingService.getMostViewedShowsOfGenre('science fiction sitcom')\n); // [Series]\n\nconsole.log(testUser.subscriptions[0].getRecommendationTrending());\nconsole.log(testUser.subscriptions[0].getRecommendationByGenre('fantasy'));\n"],"names":["Object","defineProperty","module","exports","value","default","receiver","privateMap","action","has","TypeError","get","descriptor","call","obj","privateCollection","set","writable","$e13576b86460cc50$exports","$e13576b86460cc50$var$_classExtractFieldDescriptor","$e13576b86460cc50$var$_classApplyDescriptorGet","$e13576b86460cc50$var$_interopRequireDefault","parcelRequire","__esModule","$bb98491953509995$exports","$bb98491953509995$var$_checkPrivateRedeclaration","$c36c16f840444775$exports","$c36c16f840444775$var$_classExtractFieldDescriptor","$c36c16f840444775$var$_classApplyDescriptorSet","$c36c16f840444775$var$_interopRequireDefault","$75040a6bfd470c74$var$_streamingService","WeakMap","$75040a6bfd470c74$export$2e2bcd8739ae039","streamingService","$parcel$interopDefault","this","watch","showName","shows","find","show","name","views","undefined","viewsByShowNames","console","log","getRecommendationTrending","randomNumber","Math","floor","random","getMostViewedShowsOfYear","getRecommendationByGenre","genre","getMostViewedShowsOfGenre","constructor","$cd7fc0509b117ae4$var$_subscriptions","$c9f733bc98e3bbfd$exports","privateSet","fn","$60afe4cd2804d2bb$exports","$60afe4cd2804d2bb$var$_checkPrivateRedeclaration","add","$60afe4cd2804d2bb$var$_interopRequireDefault","$da4b248c00322402$exports","key","enumerable","configurable","$901130fcfb707ed9$var$_name","$901130fcfb707ed9$var$_shows","$901130fcfb707ed9$var$_getMapKeys","WeakSet","$901130fcfb707ed9$var$getMapKeys","map","keys","push","length","slice","$5ff35d2762d388ce$export$2e2bcd8739ae039","getDuration","$330e2690e321c8c0$export$2e2bcd8739ae039","duration","releaseDate","super","$a5a7088aa3813d19$var$_episodes","$a5a7088aa3813d19$var$_calculateDuration","$a5a7088aa3813d19$var$calculateDuration","reduce","prev","episode","$1f352561ffac2f0a$export$2e2bcd8739ae039","$d706c914d748cb55$var$testMovie1","Date","$d706c914d748cb55$var$testMovie2","$d706c914d748cb55$var$testMovie3","$d706c914d748cb55$var$testSeries","setEpisodes","episodes","$d706c914d748cb55$var$episodes","$d706c914d748cb55$var$testStreamingService","addShow","year","showsFilteredByYear","filter","getFullYear","showsName","viewsByShowNamesFiltered","Map","forEach","includes","size","sortMap","entries","sort","a","b","resultShows","sortedShowNames","i","showsFilteredByGenre","values","$d706c914d748cb55$var$testUser","subscribe","subscription","subscription1","subscriptions"],"version":3,"file":"index.76ccd0c8.js.map"}